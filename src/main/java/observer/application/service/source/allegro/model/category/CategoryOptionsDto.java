/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package observer.application.service.source.allegro.model.category;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

/**
 * A list of the different options which can be used with this category.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class CategoryOptionsDto {
  public static final String SERIALIZED_NAME_ADVERTISEMENT = "advertisement";
  @SerializedName(SERIALIZED_NAME_ADVERTISEMENT)
  private Boolean advertisement;

  public static final String SERIALIZED_NAME_ADVERTISEMENT_PRICE_OPTIONAL = "advertisementPriceOptional";
  @SerializedName(SERIALIZED_NAME_ADVERTISEMENT_PRICE_OPTIONAL)
  private Boolean advertisementPriceOptional;

  public static final String SERIALIZED_NAME_VARIANTS_BY_COLOR_PATTERN_ALLOWED = "variantsByColorPatternAllowed";
  @SerializedName(SERIALIZED_NAME_VARIANTS_BY_COLOR_PATTERN_ALLOWED)
  private Boolean variantsByColorPatternAllowed;

  public static final String SERIALIZED_NAME_OFFERS_WITH_PRODUCT_PUBLICATION_ENABLED = "offersWithProductPublicationEnabled";
  @SerializedName(SERIALIZED_NAME_OFFERS_WITH_PRODUCT_PUBLICATION_ENABLED)
  private Boolean offersWithProductPublicationEnabled;

  public static final String SERIALIZED_NAME_PRODUCT_CREATION_ENABLED = "productCreationEnabled";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CREATION_ENABLED)
  private Boolean productCreationEnabled;

  public static final String SERIALIZED_NAME_PRODUCT_E_A_N_REQUIRED = "productEANRequired";
  @SerializedName(SERIALIZED_NAME_PRODUCT_E_A_N_REQUIRED)
  private Boolean productEANRequired;


  public CategoryOptionsDto advertisement(Boolean advertisement) {
    
    this.advertisement = advertisement;
    return this;
  }

   /**
   * Indicates whether offers of type ADVERTISEMENT can be listed in this category.
   * @return advertisement
  **/
  @javax.annotation.Nullable

  public Boolean getAdvertisement() {
    return advertisement;
  }



  public void setAdvertisement(Boolean advertisement) {
    this.advertisement = advertisement;
  }


  public CategoryOptionsDto advertisementPriceOptional(Boolean advertisementPriceOptional) {
    
    this.advertisementPriceOptional = advertisementPriceOptional;
    return this;
  }

   /**
   * Indicates whether advertisements listed in this category must have a price given. If the value is &#x60;true&#x60; then you don&#39;t have to provide a price when listing an advertisement in this category.
   * @return advertisementPriceOptional
  **/
  @javax.annotation.Nullable

  public Boolean getAdvertisementPriceOptional() {
    return advertisementPriceOptional;
  }



  public void setAdvertisementPriceOptional(Boolean advertisementPriceOptional) {
    this.advertisementPriceOptional = advertisementPriceOptional;
  }


  public CategoryOptionsDto variantsByColorPatternAllowed(Boolean variantsByColorPatternAllowed) {
    
    this.variantsByColorPatternAllowed = variantsByColorPatternAllowed;
    return this;
  }

   /**
   * Indicates whether you can combine offers from this category into variant sets based on the color and pattern.
   * @return variantsByColorPatternAllowed
  **/
  @javax.annotation.Nullable

  public Boolean getVariantsByColorPatternAllowed() {
    return variantsByColorPatternAllowed;
  }



  public void setVariantsByColorPatternAllowed(Boolean variantsByColorPatternAllowed) {
    this.variantsByColorPatternAllowed = variantsByColorPatternAllowed;
  }


  public CategoryOptionsDto offersWithProductPublicationEnabled(Boolean offersWithProductPublicationEnabled) {
    
    this.offersWithProductPublicationEnabled = offersWithProductPublicationEnabled;
    return this;
  }

   /**
   * Information whether the category supports assigning offers to a product.
   * @return offersWithProductPublicationEnabled
  **/
  @javax.annotation.Nullable

  public Boolean getOffersWithProductPublicationEnabled() {
    return offersWithProductPublicationEnabled;
  }



  public void setOffersWithProductPublicationEnabled(Boolean offersWithProductPublicationEnabled) {
    this.offersWithProductPublicationEnabled = offersWithProductPublicationEnabled;
  }


  public CategoryOptionsDto productCreationEnabled(Boolean productCreationEnabled) {
    
    this.productCreationEnabled = productCreationEnabled;
    return this;
  }

   /**
   * Indicates whether the category supports creating products.
   * @return productCreationEnabled
  **/
  @javax.annotation.Nullable

  public Boolean getProductCreationEnabled() {
    return productCreationEnabled;
  }



  public void setProductCreationEnabled(Boolean productCreationEnabled) {
    this.productCreationEnabled = productCreationEnabled;
  }


  public CategoryOptionsDto productEANRequired(Boolean productEANRequired) {
    
    this.productEANRequired = productEANRequired;
    return this;
  }

   /**
   * Indicates whether at least one EAN is required when creating products.
   * @return productEANRequired
  **/
  @javax.annotation.Nullable

  public Boolean getProductEANRequired() {
    return productEANRequired;
  }



  public void setProductEANRequired(Boolean productEANRequired) {
    this.productEANRequired = productEANRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CategoryOptionsDto categoryOptionsDto = (CategoryOptionsDto) o;
    return Objects.equals(this.advertisement, categoryOptionsDto.advertisement) &&
        Objects.equals(this.advertisementPriceOptional, categoryOptionsDto.advertisementPriceOptional) &&
        Objects.equals(this.variantsByColorPatternAllowed, categoryOptionsDto.variantsByColorPatternAllowed) &&
        Objects.equals(this.offersWithProductPublicationEnabled, categoryOptionsDto.offersWithProductPublicationEnabled) &&
        Objects.equals(this.productCreationEnabled, categoryOptionsDto.productCreationEnabled) &&
        Objects.equals(this.productEANRequired, categoryOptionsDto.productEANRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(advertisement, advertisementPriceOptional, variantsByColorPatternAllowed, offersWithProductPublicationEnabled, productCreationEnabled, productEANRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CategoryOptionsDto {\n");
    sb.append("    advertisement: ").append(toIndentedString(advertisement)).append("\n");
    sb.append("    advertisementPriceOptional: ").append(toIndentedString(advertisementPriceOptional)).append("\n");
    sb.append("    variantsByColorPatternAllowed: ").append(toIndentedString(variantsByColorPatternAllowed)).append("\n");
    sb.append("    offersWithProductPublicationEnabled: ").append(toIndentedString(offersWithProductPublicationEnabled)).append("\n");
    sb.append("    productCreationEnabled: ").append(toIndentedString(productCreationEnabled)).append("\n");
    sb.append("    productEANRequired: ").append(toIndentedString(productEANRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

