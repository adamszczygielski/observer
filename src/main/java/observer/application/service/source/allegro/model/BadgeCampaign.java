/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package observer.application.service.source.allegro.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * BadgeCampaign
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class BadgeCampaign {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DISCOUNT("DISCOUNT"),
    
    STANDARD("STANDARD"),
    
    SOURCING("SOURCING");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_ELIGIBILITY = "eligibility";
  @SerializedName(SERIALIZED_NAME_ELIGIBILITY)
  private UserCampaignEligibility eligibility;

  public static final String SERIALIZED_NAME_APPLICATION = "application";
  @SerializedName(SERIALIZED_NAME_APPLICATION)
  private ApplicationTimePolicy application;

  public static final String SERIALIZED_NAME_VISIBILITY = "visibility";
  @SerializedName(SERIALIZED_NAME_VISIBILITY)
  private VisibilityTimePolicy visibility;

  public static final String SERIALIZED_NAME_PUBLICATION = "publication";
  @SerializedName(SERIALIZED_NAME_PUBLICATION)
  private PublicationTimePolicy publication;


  public BadgeCampaign id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Badge campaign ID.
   * @return id
  **/
  @ApiModelProperty(example = "BARGAIN", required = true, value = "Badge campaign ID.")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public BadgeCampaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Badge campaign name.
   * @return name
  **/
  @ApiModelProperty(example = "Strefa Okazji", required = true, value = "Badge campaign name.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public BadgeCampaign type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")

  public TypeEnum getType() {
    return type;
  }



  public void setType(TypeEnum type) {
    this.type = type;
  }


  public BadgeCampaign eligibility(UserCampaignEligibility eligibility) {
    
    this.eligibility = eligibility;
    return this;
  }

   /**
   * Get eligibility
   * @return eligibility
  **/
  @ApiModelProperty(required = true, value = "")

  public UserCampaignEligibility getEligibility() {
    return eligibility;
  }



  public void setEligibility(UserCampaignEligibility eligibility) {
    this.eligibility = eligibility;
  }


  public BadgeCampaign application(ApplicationTimePolicy application) {
    
    this.application = application;
    return this;
  }

   /**
   * Get application
   * @return application
  **/
  @ApiModelProperty(required = true, value = "")

  public ApplicationTimePolicy getApplication() {
    return application;
  }



  public void setApplication(ApplicationTimePolicy application) {
    this.application = application;
  }


  public BadgeCampaign visibility(VisibilityTimePolicy visibility) {
    
    this.visibility = visibility;
    return this;
  }

   /**
   * Get visibility
   * @return visibility
  **/
  @ApiModelProperty(required = true, value = "")

  public VisibilityTimePolicy getVisibility() {
    return visibility;
  }



  public void setVisibility(VisibilityTimePolicy visibility) {
    this.visibility = visibility;
  }


  public BadgeCampaign publication(PublicationTimePolicy publication) {
    
    this.publication = publication;
    return this;
  }

   /**
   * Get publication
   * @return publication
  **/
  @ApiModelProperty(required = true, value = "")

  public PublicationTimePolicy getPublication() {
    return publication;
  }



  public void setPublication(PublicationTimePolicy publication) {
    this.publication = publication;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BadgeCampaign badgeCampaign = (BadgeCampaign) o;
    return Objects.equals(this.id, badgeCampaign.id) &&
        Objects.equals(this.name, badgeCampaign.name) &&
        Objects.equals(this.type, badgeCampaign.type) &&
        Objects.equals(this.eligibility, badgeCampaign.eligibility) &&
        Objects.equals(this.application, badgeCampaign.application) &&
        Objects.equals(this.visibility, badgeCampaign.visibility) &&
        Objects.equals(this.publication, badgeCampaign.publication);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, type, eligibility, application, visibility, publication);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BadgeCampaign {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    eligibility: ").append(toIndentedString(eligibility)).append("\n");
    sb.append("    application: ").append(toIndentedString(application)).append("\n");
    sb.append("    visibility: ").append(toIndentedString(visibility)).append("\n");
    sb.append("    publication: ").append(toIndentedString(publication)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

