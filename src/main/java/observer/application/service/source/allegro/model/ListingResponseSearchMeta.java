/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package observer.application.service.source.allegro.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Search metadata.
 */
@ApiModel(description = "Search metadata.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class ListingResponseSearchMeta {
  public static final String SERIALIZED_NAME_AVAILABLE_COUNT = "availableCount";
  @SerializedName(SERIALIZED_NAME_AVAILABLE_COUNT)
  private Integer availableCount;

  public static final String SERIALIZED_NAME_TOTAL_COUNT = "totalCount";
  @SerializedName(SERIALIZED_NAME_TOTAL_COUNT)
  private Integer totalCount;

  public static final String SERIALIZED_NAME_FALLBACK = "fallback";
  @SerializedName(SERIALIZED_NAME_FALLBACK)
  private Boolean fallback;


  public ListingResponseSearchMeta availableCount(Integer availableCount) {
    
    this.availableCount = availableCount;
    return this;
  }

   /**
   * The number of results available for navigation. If this number is less than total count, the search criteria (categories, filters, etc.) should be narrowed down to make all results available.
   * @return availableCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "6000", value = "The number of results available for navigation. If this number is less than total count, the search criteria (categories, filters, etc.) should be narrowed down to make all results available.")

  public Integer getAvailableCount() {
    return availableCount;
  }



  public void setAvailableCount(Integer availableCount) {
    this.availableCount = availableCount;
  }


  public ListingResponseSearchMeta totalCount(Integer totalCount) {
    
    this.totalCount = totalCount;
    return this;
  }

   /**
   * The total number of search results with given parameters.
   * @return totalCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "319203", value = "The total number of search results with given parameters.")

  public Integer getTotalCount() {
    return totalCount;
  }



  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  public ListingResponseSearchMeta fallback(Boolean fallback) {
    
    this.fallback = fallback;
    return this;
  }

   /**
   * Indicates whether the search fallback was used. If true, no items matching exact given phrase were found and related items are presented.
   * @return fallback
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates whether the search fallback was used. If true, no items matching exact given phrase were found and related items are presented.")

  public Boolean getFallback() {
    return fallback;
  }



  public void setFallback(Boolean fallback) {
    this.fallback = fallback;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListingResponseSearchMeta listingResponseSearchMeta = (ListingResponseSearchMeta) o;
    return Objects.equals(this.availableCount, listingResponseSearchMeta.availableCount) &&
        Objects.equals(this.totalCount, listingResponseSearchMeta.totalCount) &&
        Objects.equals(this.fallback, listingResponseSearchMeta.fallback);
  }

  @Override
  public int hashCode() {
    return Objects.hash(availableCount, totalCount, fallback);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListingResponseSearchMeta {\n");
    sb.append("    availableCount: ").append(toIndentedString(availableCount)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("    fallback: ").append(toIndentedString(fallback)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

