/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package observer.application.service.source.allegro.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Order event data
 */
@ApiModel(description = "Order event data")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class OrderEventData {
  public static final String SERIALIZED_NAME_SELLER = "seller";
  @SerializedName(SERIALIZED_NAME_SELLER)
  private SellerReference seller;

  public static final String SERIALIZED_NAME_BUYER = "buyer";
  @SerializedName(SERIALIZED_NAME_BUYER)
  private BuyerReference buyer;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "lineItems";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  private List<OrderLineItem> lineItems = new ArrayList<OrderLineItem>();

  public static final String SERIALIZED_NAME_CHECKOUT_FORM = "checkoutForm";
  @SerializedName(SERIALIZED_NAME_CHECKOUT_FORM)
  private CheckoutFormReference checkoutForm;


  public OrderEventData seller(SellerReference seller) {
    
    this.seller = seller;
    return this;
  }

   /**
   * Get seller
   * @return seller
  **/
  @ApiModelProperty(required = true, value = "")

  public SellerReference getSeller() {
    return seller;
  }



  public void setSeller(SellerReference seller) {
    this.seller = seller;
  }


  public OrderEventData buyer(BuyerReference buyer) {
    
    this.buyer = buyer;
    return this;
  }

   /**
   * Get buyer
   * @return buyer
  **/
  @ApiModelProperty(required = true, value = "")

  public BuyerReference getBuyer() {
    return buyer;
  }



  public void setBuyer(BuyerReference buyer) {
    this.buyer = buyer;
  }


  public OrderEventData lineItems(List<OrderLineItem> lineItems) {
    
    this.lineItems = lineItems;
    return this;
  }

  public OrderEventData addLineItemsItem(OrderLineItem lineItemsItem) {
    this.lineItems.add(lineItemsItem);
    return this;
  }

   /**
   * Get lineItems
   * @return lineItems
  **/
  @ApiModelProperty(required = true, value = "")

  public List<OrderLineItem> getLineItems() {
    return lineItems;
  }



  public void setLineItems(List<OrderLineItem> lineItems) {
    this.lineItems = lineItems;
  }


  public OrderEventData checkoutForm(CheckoutFormReference checkoutForm) {
    
    this.checkoutForm = checkoutForm;
    return this;
  }

   /**
   * Get checkoutForm
   * @return checkoutForm
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CheckoutFormReference getCheckoutForm() {
    return checkoutForm;
  }



  public void setCheckoutForm(CheckoutFormReference checkoutForm) {
    this.checkoutForm = checkoutForm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderEventData orderEventData = (OrderEventData) o;
    return Objects.equals(this.seller, orderEventData.seller) &&
        Objects.equals(this.buyer, orderEventData.buyer) &&
        Objects.equals(this.lineItems, orderEventData.lineItems) &&
        Objects.equals(this.checkoutForm, orderEventData.checkoutForm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(seller, buyer, lineItems, checkoutForm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderEventData {\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    checkoutForm: ").append(toIndentedString(checkoutForm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

