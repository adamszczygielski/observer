/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package observer.application.service.source.allegro.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * Policy of calculating delivery costs.
 */
@ApiModel(description = "Policy of calculating delivery costs.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class DeliverySettingsDtoJoinPolicy {
  /**
   * Strategy used to calculate delivery cost for items from offers with different delivery costs. The possible values:   * &#x60;MAX&#x60; - The buyer will pay for the most expensive delivery   * &#x60;MIN&#x60; - The buyer will pay for the cheapest delivery   * &#x60;SUM&#x60; - Items will be sent in separate parcels and delivery costs will be sum of delivery costs for each item.
   */
  @JsonAdapter(StrategyEnum.Adapter.class)
  public enum StrategyEnum {
    MIN("MIN"),
    
    MAX("MAX"),
    
    SUM("SUM");

    private String value;

    StrategyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StrategyEnum fromValue(String value) {
      for (StrategyEnum b : StrategyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StrategyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StrategyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StrategyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StrategyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STRATEGY = "strategy";
  @SerializedName(SERIALIZED_NAME_STRATEGY)
  private StrategyEnum strategy;


  public DeliverySettingsDtoJoinPolicy strategy(StrategyEnum strategy) {
    
    this.strategy = strategy;
    return this;
  }

   /**
   * Strategy used to calculate delivery cost for items from offers with different delivery costs. The possible values:   * &#x60;MAX&#x60; - The buyer will pay for the most expensive delivery   * &#x60;MIN&#x60; - The buyer will pay for the cheapest delivery   * &#x60;SUM&#x60; - Items will be sent in separate parcels and delivery costs will be sum of delivery costs for each item.
   * @return strategy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Strategy used to calculate delivery cost for items from offers with different delivery costs. The possible values:   * `MAX` - The buyer will pay for the most expensive delivery   * `MIN` - The buyer will pay for the cheapest delivery   * `SUM` - Items will be sent in separate parcels and delivery costs will be sum of delivery costs for each item.")

  public StrategyEnum getStrategy() {
    return strategy;
  }



  public void setStrategy(StrategyEnum strategy) {
    this.strategy = strategy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeliverySettingsDtoJoinPolicy deliverySettingsDtoJoinPolicy = (DeliverySettingsDtoJoinPolicy) o;
    return Objects.equals(this.strategy, deliverySettingsDtoJoinPolicy.strategy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(strategy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeliverySettingsDtoJoinPolicy {\n");
    sb.append("    strategy: ").append(toIndentedString(strategy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

