/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.allegro.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * ModificationPayments
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class ModificationPayments {
  /**
   * Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE
   */
  @JsonAdapter(InvoiceEnum.Adapter.class)
  public enum InvoiceEnum {
    VAT("VAT"),
    
    VAT_MARGIN("VAT_MARGIN"),
    
    WITHOUT_VAT("WITHOUT_VAT"),
    
    NO_INVOICE("NO_INVOICE");

    private String value;

    InvoiceEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InvoiceEnum fromValue(String value) {
      for (InvoiceEnum b : InvoiceEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InvoiceEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InvoiceEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InvoiceEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InvoiceEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INVOICE = "invoice";
  @SerializedName(SERIALIZED_NAME_INVOICE)
  private InvoiceEnum invoice;


  public ModificationPayments invoice(InvoiceEnum invoice) {
    
    this.invoice = invoice;
    return this;
  }

   /**
   * Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE
   * @return invoice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Invoice type: VAT, VAT_MARGIN, WITHOUT_VAT, NO_INVOICE")

  public InvoiceEnum getInvoice() {
    return invoice;
  }



  public void setInvoice(InvoiceEnum invoice) {
    this.invoice = invoice;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ModificationPayments modificationPayments = (ModificationPayments) o;
    return Objects.equals(this.invoice, modificationPayments.invoice);
  }

  @Override
  public int hashCode() {
    return Objects.hash(invoice);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ModificationPayments {\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

