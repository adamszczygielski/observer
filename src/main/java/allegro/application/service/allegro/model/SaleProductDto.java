/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.allegro.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * SaleProductDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class SaleProductDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private Category category;

  public static final String SERIALIZED_NAME_EANS = "eans";
  @SerializedName(SERIALIZED_NAME_EANS)
  private List<String> eans = null;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<ImageUrl> images = null;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<ProductParameter> parameters = null;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private StandardizedDescription description;


  public SaleProductDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Product id.
   * @return id
  **/
  @ApiModelProperty(example = "c9e39cae-9cb6-11e9-a2a3-2a2ae2dbcce4", required = true, value = "Product id.")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public SaleProductDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Product name.
   * @return name
  **/
  @ApiModelProperty(example = "iPhone 5s", required = true, value = "Product name.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public SaleProductDto category(Category category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")

  public Category getCategory() {
    return category;
  }



  public void setCategory(Category category) {
    this.category = category;
  }


  public SaleProductDto eans(List<String> eans) {
    
    this.eans = eans;
    return this;
  }

  public SaleProductDto addEansItem(String eansItem) {
    if (this.eans == null) {
      this.eans = new ArrayList<String>();
    }
    this.eans.add(eansItem);
    return this;
  }

   /**
   * A list of codes that identify this product. Currently this can include EAN, ISBN, and UPC identifier types.
   * @return eans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"0019062113399\",\"0000007905193\"]", value = "A list of codes that identify this product. Currently this can include EAN, ISBN, and UPC identifier types.")

  public List<String> getEans() {
    return eans;
  }



  public void setEans(List<String> eans) {
    this.eans = eans;
  }


  public SaleProductDto images(List<ImageUrl> images) {
    
    this.images = images;
    return this;
  }

  public SaleProductDto addImagesItem(ImageUrl imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<ImageUrl>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * List of product images.
   * @return images
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of product images.")

  public List<ImageUrl> getImages() {
    return images;
  }



  public void setImages(List<ImageUrl> images) {
    this.images = images;
  }


  public SaleProductDto parameters(List<ProductParameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public SaleProductDto addParametersItem(ProductParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<ProductParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * List of product parameters.
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of product parameters.")

  public List<ProductParameter> getParameters() {
    return parameters;
  }



  public void setParameters(List<ProductParameter> parameters) {
    this.parameters = parameters;
  }


  public SaleProductDto description(StandardizedDescription description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public StandardizedDescription getDescription() {
    return description;
  }



  public void setDescription(StandardizedDescription description) {
    this.description = description;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleProductDto saleProductDto = (SaleProductDto) o;
    return Objects.equals(this.id, saleProductDto.id) &&
        Objects.equals(this.name, saleProductDto.name) &&
        Objects.equals(this.category, saleProductDto.category) &&
        Objects.equals(this.eans, saleProductDto.eans) &&
        Objects.equals(this.images, saleProductDto.images) &&
        Objects.equals(this.parameters, saleProductDto.parameters) &&
        Objects.equals(this.description, saleProductDto.description);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, category, eans, images, parameters, description);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleProductDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    eans: ").append(toIndentedString(eans)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

