/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.source.allegro.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * The restrictions on values of this parameter.
 */
@ApiModel(description = "The restrictions on values of this parameter.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class StringCategoryProductParameterAllOfRestrictions {
  public static final String SERIALIZED_NAME_MIN_LENGTH = "minLength";
  @SerializedName(SERIALIZED_NAME_MIN_LENGTH)
  private Integer minLength;

  public static final String SERIALIZED_NAME_MAX_LENGTH = "maxLength";
  @SerializedName(SERIALIZED_NAME_MAX_LENGTH)
  private Integer maxLength;

  public static final String SERIALIZED_NAME_ALLOWED_NUMBER_OF_VALUES = "allowedNumberOfValues";
  @SerializedName(SERIALIZED_NAME_ALLOWED_NUMBER_OF_VALUES)
  private Integer allowedNumberOfValues;


  public StringCategoryProductParameterAllOfRestrictions minLength(Integer minLength) {
    
    this.minLength = minLength;
    return this;
  }

   /**
   * The minimum length of the parameter value.
   * @return minLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "3", value = "The minimum length of the parameter value.")

  public Integer getMinLength() {
    return minLength;
  }



  public void setMinLength(Integer minLength) {
    this.minLength = minLength;
  }


  public StringCategoryProductParameterAllOfRestrictions maxLength(Integer maxLength) {
    
    this.maxLength = maxLength;
    return this;
  }

   /**
   * The maximum length of the parameter value.
   * @return maxLength
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "250", value = "The maximum length of the parameter value.")

  public Integer getMaxLength() {
    return maxLength;
  }



  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }


  public StringCategoryProductParameterAllOfRestrictions allowedNumberOfValues(Integer allowedNumberOfValues) {
    
    this.allowedNumberOfValues = allowedNumberOfValues;
    return this;
  }

   /**
   * Indicates how many different values can be provided for this parameter.
   * @return allowedNumberOfValues
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "5", value = "Indicates how many different values can be provided for this parameter.")

  public Integer getAllowedNumberOfValues() {
    return allowedNumberOfValues;
  }



  public void setAllowedNumberOfValues(Integer allowedNumberOfValues) {
    this.allowedNumberOfValues = allowedNumberOfValues;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StringCategoryProductParameterAllOfRestrictions stringCategoryProductParameterAllOfRestrictions = (StringCategoryProductParameterAllOfRestrictions) o;
    return Objects.equals(this.minLength, stringCategoryProductParameterAllOfRestrictions.minLength) &&
        Objects.equals(this.maxLength, stringCategoryProductParameterAllOfRestrictions.maxLength) &&
        Objects.equals(this.allowedNumberOfValues, stringCategoryProductParameterAllOfRestrictions.allowedNumberOfValues);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minLength, maxLength, allowedNumberOfValues);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StringCategoryProductParameterAllOfRestrictions {\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    allowedNumberOfValues: ").append(toIndentedString(allowedNumberOfValues)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

