/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.source.allegro.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * CompatibilityListSupportedCategoriesDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class CompatibilityListSupportedCategoriesDto {
  public static final String SERIALIZED_NAME_SUPPORTED_CATEGORIES = "supportedCategories";
  @SerializedName(SERIALIZED_NAME_SUPPORTED_CATEGORIES)
  private List<CompatibilityListSupportedCategoriesDtoSupportedCategories> supportedCategories = null;


  public CompatibilityListSupportedCategoriesDto supportedCategories(List<CompatibilityListSupportedCategoriesDtoSupportedCategories> supportedCategories) {
    
    this.supportedCategories = supportedCategories;
    return this;
  }

  public CompatibilityListSupportedCategoriesDto addSupportedCategoriesItem(CompatibilityListSupportedCategoriesDtoSupportedCategories supportedCategoriesItem) {
    if (this.supportedCategories == null) {
      this.supportedCategories = new ArrayList<CompatibilityListSupportedCategoriesDtoSupportedCategories>();
    }
    this.supportedCategories.add(supportedCategoriesItem);
    return this;
  }

   /**
   * List with information about categories where compatibility list is supported. &lt;a href&#x3D;\&quot; https://developer.allegro.pl/compatibility_list/\&quot; target&#x3D;\&quot;_blank\&quot;&gt;Read more&lt;/a&gt;.
   * @return supportedCategories
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[{\"categoryId\":\"620\",\"name\":\"Części samochodowe\",\"itemsType\":\"CAR\",\"inputType\":\"ID\",\"validationRules\":{\"maxRows\":2000,\"maxCharactersPerLine\":null}},{\"categoryId\":\"257358\",\"name\":\"Pióra wycieraczek\",\"itemsType\":\"CAR\",\"inputType\":\"ID\",\"validationRules\":{\"maxRows\":2000,\"maxCharactersPerLine\":null}},{\"categoryId\":\"158\",\"name\":\"Części motocyklowe\",\"itemsType\":\"MOTORCYCLE\",\"inputType\":\"ID\",\"validationRules\":{\"maxRows\":2000,\"maxCharactersPerLine\":null}},{\"categoryId\":\"9108\",\"name\":\"Tusze\",\"itemsType\":\"PRINTER\",\"inputType\":\"TEXT\",\"validationRules\":{\"maxRows\":200,\"maxCharactersPerLine\":100}}]", value = "List with information about categories where compatibility list is supported. <a href=\" https://developer.allegro.pl/compatibility_list/\" target=\"_blank\">Read more</a>.")

  public List<CompatibilityListSupportedCategoriesDtoSupportedCategories> getSupportedCategories() {
    return supportedCategories;
  }



  public void setSupportedCategories(List<CompatibilityListSupportedCategoriesDtoSupportedCategories> supportedCategories) {
    this.supportedCategories = supportedCategories;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompatibilityListSupportedCategoriesDto compatibilityListSupportedCategoriesDto = (CompatibilityListSupportedCategoriesDto) o;
    return Objects.equals(this.supportedCategories, compatibilityListSupportedCategoriesDto.supportedCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(supportedCategories);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompatibilityListSupportedCategoriesDto {\n");
    sb.append("    supportedCategories: ").append(toIndentedString(supportedCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

