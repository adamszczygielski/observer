/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.source.allegro.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * Dispute
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class Dispute {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private Subject subject;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    CLOSED("CLOSED"),
    
    ONGOING("ONGOING"),
    
    UNRESOLVED("UNRESOLVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_BUYER = "buyer";
  @SerializedName(SERIALIZED_NAME_BUYER)
  private DisputeUser buyer;

  public static final String SERIALIZED_NAME_SELLER = "seller";
  @SerializedName(SERIALIZED_NAME_SELLER)
  private DisputeUser seller;

  public static final String SERIALIZED_NAME_CHECKOUT_FORM = "checkoutForm";
  @SerializedName(SERIALIZED_NAME_CHECKOUT_FORM)
  private DisputeCheckoutForm checkoutForm;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private DisputeFirstMessage message;

  public static final String SERIALIZED_NAME_MESSAGES_COUNT = "messagesCount";
  @SerializedName(SERIALIZED_NAME_MESSAGES_COUNT)
  private Integer messagesCount;


  public Dispute id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Identifier of the dispute
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Identifier of the dispute")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public Dispute subject(Subject subject) {
    
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(required = true, value = "")

  public Subject getSubject() {
    return subject;
  }



  public void setSubject(Subject subject) {
    this.subject = subject;
  }


  public Dispute status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")

  public StatusEnum getStatus() {
    return status;
  }



  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public Dispute buyer(DisputeUser buyer) {
    
    this.buyer = buyer;
    return this;
  }

   /**
   * Get buyer
   * @return buyer
  **/
  @ApiModelProperty(required = true, value = "")

  public DisputeUser getBuyer() {
    return buyer;
  }



  public void setBuyer(DisputeUser buyer) {
    this.buyer = buyer;
  }


  public Dispute seller(DisputeUser seller) {
    
    this.seller = seller;
    return this;
  }

   /**
   * Get seller
   * @return seller
  **/
  @ApiModelProperty(required = true, value = "")

  public DisputeUser getSeller() {
    return seller;
  }



  public void setSeller(DisputeUser seller) {
    this.seller = seller;
  }


  public Dispute checkoutForm(DisputeCheckoutForm checkoutForm) {
    
    this.checkoutForm = checkoutForm;
    return this;
  }

   /**
   * Get checkoutForm
   * @return checkoutForm
  **/
  @ApiModelProperty(required = true, value = "")

  public DisputeCheckoutForm getCheckoutForm() {
    return checkoutForm;
  }



  public void setCheckoutForm(DisputeCheckoutForm checkoutForm) {
    this.checkoutForm = checkoutForm;
  }


  public Dispute message(DisputeFirstMessage message) {
    
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "")

  public DisputeFirstMessage getMessage() {
    return message;
  }



  public void setMessage(DisputeFirstMessage message) {
    this.message = message;
  }


  public Dispute messagesCount(Integer messagesCount) {
    
    this.messagesCount = messagesCount;
    return this;
  }

   /**
   * Get messagesCount
   * @return messagesCount
  **/
  @ApiModelProperty(required = true, value = "")

  public Integer getMessagesCount() {
    return messagesCount;
  }



  public void setMessagesCount(Integer messagesCount) {
    this.messagesCount = messagesCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Dispute dispute = (Dispute) o;
    return Objects.equals(this.id, dispute.id) &&
        Objects.equals(this.subject, dispute.subject) &&
        Objects.equals(this.status, dispute.status) &&
        Objects.equals(this.buyer, dispute.buyer) &&
        Objects.equals(this.seller, dispute.seller) &&
        Objects.equals(this.checkoutForm, dispute.checkoutForm) &&
        Objects.equals(this.message, dispute.message) &&
        Objects.equals(this.messagesCount, dispute.messagesCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, subject, status, buyer, seller, checkoutForm, message, messagesCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Dispute {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    buyer: ").append(toIndentedString(buyer)).append("\n");
    sb.append("    seller: ").append(toIndentedString(seller)).append("\n");
    sb.append("    checkoutForm: ").append(toIndentedString(checkoutForm)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    messagesCount: ").append(toIndentedString(messagesCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

