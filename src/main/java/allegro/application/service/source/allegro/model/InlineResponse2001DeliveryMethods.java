/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.source.allegro.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * InlineResponse2001DeliveryMethods
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class InlineResponse2001DeliveryMethods {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  /**
   * Whether the payment is to be collected in advance or on delivery.
   */
  @JsonAdapter(PaymentPolicyEnum.Adapter.class)
  public enum PaymentPolicyEnum {
    IN_ADVANCE("IN_ADVANCE"),
    
    CASH_ON_DELIVERY("CASH_ON_DELIVERY");

    private String value;

    PaymentPolicyEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PaymentPolicyEnum fromValue(String value) {
      for (PaymentPolicyEnum b : PaymentPolicyEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PaymentPolicyEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PaymentPolicyEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PaymentPolicyEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PaymentPolicyEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PAYMENT_POLICY = "paymentPolicy";
  @SerializedName(SERIALIZED_NAME_PAYMENT_POLICY)
  private PaymentPolicyEnum paymentPolicy;

  public static final String SERIALIZED_NAME_ALLEGRO_ENDORSED = "allegroEndorsed";
  @SerializedName(SERIALIZED_NAME_ALLEGRO_ENDORSED)
  private Boolean allegroEndorsed;

  public static final String SERIALIZED_NAME_SHIPPING_RATES_CONSTRAINTS = "shippingRatesConstraints";
  @SerializedName(SERIALIZED_NAME_SHIPPING_RATES_CONSTRAINTS)
  private InlineResponse2001ShippingRatesConstraints shippingRatesConstraints;


  public InlineResponse2001DeliveryMethods id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Delivery method ID.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Delivery method ID.")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public InlineResponse2001DeliveryMethods name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Delivery method name.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Delivery method name.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public InlineResponse2001DeliveryMethods paymentPolicy(PaymentPolicyEnum paymentPolicy) {
    
    this.paymentPolicy = paymentPolicy;
    return this;
  }

   /**
   * Whether the payment is to be collected in advance or on delivery.
   * @return paymentPolicy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether the payment is to be collected in advance or on delivery.")

  public PaymentPolicyEnum getPaymentPolicy() {
    return paymentPolicy;
  }



  public void setPaymentPolicy(PaymentPolicyEnum paymentPolicy) {
    this.paymentPolicy = paymentPolicy;
  }


  public InlineResponse2001DeliveryMethods allegroEndorsed(Boolean allegroEndorsed) {
    
    this.allegroEndorsed = allegroEndorsed;
    return this;
  }

   /**
   * Indicates Allegro signed delivery method, which allows to easily distinguish similar delivery methods with various restrictions, e.g. Allegro Paczkomaty 24/7 InPost from Paczkomaty 24/7.
   * @return allegroEndorsed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Indicates Allegro signed delivery method, which allows to easily distinguish similar delivery methods with various restrictions, e.g. Allegro Paczkomaty 24/7 InPost from Paczkomaty 24/7.")

  public Boolean getAllegroEndorsed() {
    return allegroEndorsed;
  }



  public void setAllegroEndorsed(Boolean allegroEndorsed) {
    this.allegroEndorsed = allegroEndorsed;
  }


  public InlineResponse2001DeliveryMethods shippingRatesConstraints(InlineResponse2001ShippingRatesConstraints shippingRatesConstraints) {
    
    this.shippingRatesConstraints = shippingRatesConstraints;
    return this;
  }

   /**
   * Get shippingRatesConstraints
   * @return shippingRatesConstraints
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public InlineResponse2001ShippingRatesConstraints getShippingRatesConstraints() {
    return shippingRatesConstraints;
  }



  public void setShippingRatesConstraints(InlineResponse2001ShippingRatesConstraints shippingRatesConstraints) {
    this.shippingRatesConstraints = shippingRatesConstraints;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2001DeliveryMethods inlineResponse2001DeliveryMethods = (InlineResponse2001DeliveryMethods) o;
    return Objects.equals(this.id, inlineResponse2001DeliveryMethods.id) &&
        Objects.equals(this.name, inlineResponse2001DeliveryMethods.name) &&
        Objects.equals(this.paymentPolicy, inlineResponse2001DeliveryMethods.paymentPolicy) &&
        Objects.equals(this.allegroEndorsed, inlineResponse2001DeliveryMethods.allegroEndorsed) &&
        Objects.equals(this.shippingRatesConstraints, inlineResponse2001DeliveryMethods.shippingRatesConstraints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, paymentPolicy, allegroEndorsed, shippingRatesConstraints);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2001DeliveryMethods {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    paymentPolicy: ").append(toIndentedString(paymentPolicy)).append("\n");
    sb.append("    allegroEndorsed: ").append(toIndentedString(allegroEndorsed)).append("\n");
    sb.append("    shippingRatesConstraints: ").append(toIndentedString(shippingRatesConstraints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

