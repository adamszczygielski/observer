/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.service.source.allegro.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * BadgeApplicationRejectionReasonMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class BadgeApplicationRejectionReasonMessage {
  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;


  public BadgeApplicationRejectionReasonMessage text(String text) {
    
    this.text = text;
    return this;
  }

   /**
   * Detailed message.
   * @return text
  **/
  @ApiModelProperty(example = "See requirements.", required = true, value = "Detailed message.")

  public String getText() {
    return text;
  }



  public void setText(String text) {
    this.text = text;
  }


  public BadgeApplicationRejectionReasonMessage link(String link) {
    
    this.link = link;
    return this;
  }

   /**
   * Optional link that redirects to page associated with rejection reason.
   * @return link
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://allegro.pl/regulamin/pl", value = "Optional link that redirects to page associated with rejection reason.")

  public String getLink() {
    return link;
  }



  public void setLink(String link) {
    this.link = link;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BadgeApplicationRejectionReasonMessage badgeApplicationRejectionReasonMessage = (BadgeApplicationRejectionReasonMessage) o;
    return Objects.equals(this.text, badgeApplicationRejectionReasonMessage.text) &&
        Objects.equals(this.link, badgeApplicationRejectionReasonMessage.link);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, link);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BadgeApplicationRejectionReasonMessage {\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

