/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.Objects;

/**
 * CompatibilityListSupportedCategoriesDtoSupportedCategories
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class CompatibilityListSupportedCategoriesDtoSupportedCategories {
  public static final String SERIALIZED_NAME_CATEGORY_ID = "categoryId";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_ITEMS_TYPE = "itemsType";
  @SerializedName(SERIALIZED_NAME_ITEMS_TYPE)
  private String itemsType;

  /**
   * Type of the representation of compatible item. &lt;ul&gt; &lt;li&gt;&#x60;TEXT&#x60; - item on compatibility list has to be provided as plain text.&lt;/li&gt; &lt;li&gt;&#x60;ID&#x60; - item on compatibility list has to be provided as identifier of compatible product. To obtain it please use &lt;a href&#x3D;\&quot;/documentation/#tag/Compatibility-List/paths/~1sale~1compatible-products/get\&quot;&gt;compatible-products&lt;/a&gt; resource together with &#x60;itemsType&#x60; supported in particular category. &lt;/li&gt; &lt;/ul&gt; 
   */
  @JsonAdapter(InputTypeEnum.Adapter.class)
  public enum InputTypeEnum {
    TEXT("TEXT"),
    
    ID("ID");

    private String value;

    InputTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InputTypeEnum fromValue(String value) {
      for (InputTypeEnum b : InputTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<InputTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InputTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InputTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InputTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INPUT_TYPE = "inputType";
  @SerializedName(SERIALIZED_NAME_INPUT_TYPE)
  private InputTypeEnum inputType;

  public static final String SERIALIZED_NAME_VALIDATION_RULES = "validationRules";
  @SerializedName(SERIALIZED_NAME_VALIDATION_RULES)
  private CompatibilityListSupportedCategoriesDtoValidationRules validationRules;


  public CompatibilityListSupportedCategoriesDtoSupportedCategories categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Identifier of the category, where you can use the compatibility list in an offer listed in the category or in all subcategories, which belongs to returned category.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "620", value = "Identifier of the category, where you can use the compatibility list in an offer listed in the category or in all subcategories, which belongs to returned category.")

  public String getCategoryId() {
    return categoryId;
  }



  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public CompatibilityListSupportedCategoriesDtoSupportedCategories name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of supported category.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Części samochodowe", value = "Name of supported category.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public CompatibilityListSupportedCategoriesDtoSupportedCategories itemsType(String itemsType) {
    
    this.itemsType = itemsType;
    return this;
  }

   /**
   * Type of the compatible item.
   * @return itemsType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "CAR", value = "Type of the compatible item.")

  public String getItemsType() {
    return itemsType;
  }



  public void setItemsType(String itemsType) {
    this.itemsType = itemsType;
  }


  public CompatibilityListSupportedCategoriesDtoSupportedCategories inputType(InputTypeEnum inputType) {
    
    this.inputType = inputType;
    return this;
  }

   /**
   * Type of the representation of compatible item. &lt;ul&gt; &lt;li&gt;&#x60;TEXT&#x60; - item on compatibility list has to be provided as plain text.&lt;/li&gt; &lt;li&gt;&#x60;ID&#x60; - item on compatibility list has to be provided as identifier of compatible product. To obtain it please use &lt;a href&#x3D;\&quot;/documentation/#tag/Compatibility-List/paths/~1sale~1compatible-products/get\&quot;&gt;compatible-products&lt;/a&gt; resource together with &#x60;itemsType&#x60; supported in particular category. &lt;/li&gt; &lt;/ul&gt; 
   * @return inputType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "TEXT", value = "Type of the representation of compatible item. <ul> <li>`TEXT` - item on compatibility list has to be provided as plain text.</li> <li>`ID` - item on compatibility list has to be provided as identifier of compatible product. To obtain it please use <a href=\"/documentation/#tag/Compatibility-List/paths/~1sale~1compatible-products/get\">compatible-products</a> resource together with `itemsType` supported in particular category. </li> </ul> ")

  public InputTypeEnum getInputType() {
    return inputType;
  }



  public void setInputType(InputTypeEnum inputType) {
    this.inputType = inputType;
  }


  public CompatibilityListSupportedCategoriesDtoSupportedCategories validationRules(CompatibilityListSupportedCategoriesDtoValidationRules validationRules) {
    
    this.validationRules = validationRules;
    return this;
  }

   /**
   * Get validationRules
   * @return validationRules
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompatibilityListSupportedCategoriesDtoValidationRules getValidationRules() {
    return validationRules;
  }



  public void setValidationRules(CompatibilityListSupportedCategoriesDtoValidationRules validationRules) {
    this.validationRules = validationRules;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompatibilityListSupportedCategoriesDtoSupportedCategories compatibilityListSupportedCategoriesDtoSupportedCategories = (CompatibilityListSupportedCategoriesDtoSupportedCategories) o;
    return Objects.equals(this.categoryId, compatibilityListSupportedCategoriesDtoSupportedCategories.categoryId) &&
        Objects.equals(this.name, compatibilityListSupportedCategoriesDtoSupportedCategories.name) &&
        Objects.equals(this.itemsType, compatibilityListSupportedCategoriesDtoSupportedCategories.itemsType) &&
        Objects.equals(this.inputType, compatibilityListSupportedCategoriesDtoSupportedCategories.inputType) &&
        Objects.equals(this.validationRules, compatibilityListSupportedCategoriesDtoSupportedCategories.validationRules);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryId, name, itemsType, inputType, validationRules);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompatibilityListSupportedCategoriesDtoSupportedCategories {\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    itemsType: ").append(toIndentedString(itemsType)).append("\n");
    sb.append("    inputType: ").append(toIndentedString(inputType)).append("\n");
    sb.append("    validationRules: ").append(toIndentedString(validationRules)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

