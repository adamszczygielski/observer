/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Additional information about constraints assigned to the category.
 */
@ApiModel(description = "Additional information about constraints assigned to the category.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class CompatibilityListSupportedCategoriesDtoValidationRules {
  public static final String SERIALIZED_NAME_MAX_ROWS = "maxRows";
  @SerializedName(SERIALIZED_NAME_MAX_ROWS)
  private Integer maxRows;

  public static final String SERIALIZED_NAME_MAX_CHARACTERS_PER_LINE = "maxCharactersPerLine";
  @SerializedName(SERIALIZED_NAME_MAX_CHARACTERS_PER_LINE)
  private Integer maxCharactersPerLine;


  public CompatibilityListSupportedCategoriesDtoValidationRules maxRows(Integer maxRows) {
    
    this.maxRows = maxRows;
    return this;
  }

   /**
   * Maximum number of items allowed on compatibility list.
   * @return maxRows
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2000", value = "Maximum number of items allowed on compatibility list.")

  public Integer getMaxRows() {
    return maxRows;
  }



  public void setMaxRows(Integer maxRows) {
    this.maxRows = maxRows;
  }


  public CompatibilityListSupportedCategoriesDtoValidationRules maxCharactersPerLine(Integer maxCharactersPerLine) {
    
    this.maxCharactersPerLine = maxCharactersPerLine;
    return this;
  }

   /**
   * Maximum length of single item on the list.
   * @return maxCharactersPerLine
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "160", value = "Maximum length of single item on the list.")

  public Integer getMaxCharactersPerLine() {
    return maxCharactersPerLine;
  }



  public void setMaxCharactersPerLine(Integer maxCharactersPerLine) {
    this.maxCharactersPerLine = maxCharactersPerLine;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompatibilityListSupportedCategoriesDtoValidationRules compatibilityListSupportedCategoriesDtoValidationRules = (CompatibilityListSupportedCategoriesDtoValidationRules) o;
    return Objects.equals(this.maxRows, compatibilityListSupportedCategoriesDtoValidationRules.maxRows) &&
        Objects.equals(this.maxCharactersPerLine, compatibilityListSupportedCategoriesDtoValidationRules.maxCharactersPerLine);
  }

  @Override
  public int hashCode() {
    return Objects.hash(maxRows, maxCharactersPerLine);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompatibilityListSupportedCategoriesDtoValidationRules {\n");
    sb.append("    maxRows: ").append(toIndentedString(maxRows)).append("\n");
    sb.append("    maxCharactersPerLine: ").append(toIndentedString(maxCharactersPerLine)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

