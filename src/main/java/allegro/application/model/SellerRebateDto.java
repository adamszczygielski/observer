/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * SellerRebateDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class SellerRebateDto {
  public static final String SERIALIZED_NAME_BENEFITS = "benefits";
  @SerializedName(SERIALIZED_NAME_BENEFITS)
  private List<Benefit> benefits = new ArrayList<Benefit>();

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_OFFER_CRITERIA = "offerCriteria";
  @SerializedName(SERIALIZED_NAME_OFFER_CRITERIA)
  private List<SellerRebateOfferCriterion> offerCriteria = new ArrayList<SellerRebateOfferCriterion>();

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    ACTIVE("ACTIVE"),
    
    INACTIVE("INACTIVE"),
    
    SUSPENDED("SUSPENDED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;


  public SellerRebateDto benefits(List<Benefit> benefits) {
    
    this.benefits = benefits;
    return this;
  }

  public SellerRebateDto addBenefitsItem(Benefit benefitsItem) {
    this.benefits.add(benefitsItem);
    return this;
  }

   /**
   * What kind of rebate will be given
   * @return benefits
  **/
  @ApiModelProperty(required = true, value = "What kind of rebate will be given")

  public List<Benefit> getBenefits() {
    return benefits;
  }



  public void setBenefits(List<Benefit> benefits) {
    this.benefits = benefits;
  }


  public SellerRebateDto createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * when was this rebate created
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-05-01T10:12:32.321Z", value = "when was this rebate created")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }



  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public SellerRebateDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Rebate identifier
   * @return id
  **/
  @ApiModelProperty(example = "7c9a76d3-9fd0-4d13-a4ce-5d49bec12c79", required = true, value = "Rebate identifier")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public SellerRebateDto offerCriteria(List<SellerRebateOfferCriterion> offerCriteria) {
    
    this.offerCriteria = offerCriteria;
    return this;
  }

  public SellerRebateDto addOfferCriteriaItem(SellerRebateOfferCriterion offerCriteriaItem) {
    this.offerCriteria.add(offerCriteriaItem);
    return this;
  }

   /**
   * What offers will be included
   * @return offerCriteria
  **/
  @ApiModelProperty(required = true, value = "What offers will be included")

  public List<SellerRebateOfferCriterion> getOfferCriteria() {
    return offerCriteria;
  }



  public void setOfferCriteria(List<SellerRebateOfferCriterion> offerCriteria) {
    this.offerCriteria = offerCriteria;
  }


  public SellerRebateDto status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "")

  public StatusEnum getStatus() {
    return status;
  }



  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SellerRebateDto sellerRebateDto = (SellerRebateDto) o;
    return Objects.equals(this.benefits, sellerRebateDto.benefits) &&
        Objects.equals(this.createdAt, sellerRebateDto.createdAt) &&
        Objects.equals(this.id, sellerRebateDto.id) &&
        Objects.equals(this.offerCriteria, sellerRebateDto.offerCriteria) &&
        Objects.equals(this.status, sellerRebateDto.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(benefits, createdAt, id, offerCriteria, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SellerRebateDto {\n");
    sb.append("    benefits: ").append(toIndentedString(benefits)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    offerCriteria: ").append(toIndentedString(offerCriteria)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

