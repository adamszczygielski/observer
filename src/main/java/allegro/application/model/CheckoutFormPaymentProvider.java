/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * Payment provider
 */
@JsonAdapter(CheckoutFormPaymentProvider.Adapter.class)
public enum CheckoutFormPaymentProvider {
  
  P24("P24"),
  
  PAYU("PAYU");

  private String value;

  CheckoutFormPaymentProvider(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CheckoutFormPaymentProvider fromValue(String value) {
    for (CheckoutFormPaymentProvider b : CheckoutFormPaymentProvider.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<CheckoutFormPaymentProvider> {
    @Override
    public void write(final JsonWriter jsonWriter, final CheckoutFormPaymentProvider enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CheckoutFormPaymentProvider read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CheckoutFormPaymentProvider.fromValue(value);
    }
  }
}

