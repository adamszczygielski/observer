/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * SaleProductResponseDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")
public class SaleProductResponseDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private Category category;

  public static final String SERIALIZED_NAME_EANS = "eans";
  @SerializedName(SERIALIZED_NAME_EANS)
  private List<String> eans = null;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<ImageUrl> images = null;

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  private List<ProductParameter> parameters = null;

  public static final String SERIALIZED_NAME_OFFER_REQUIREMENTS = "offerRequirements";
  @SerializedName(SERIALIZED_NAME_OFFER_REQUIREMENTS)
  private OfferRequirements offerRequirements;

  public static final String SERIALIZED_NAME_COMPATIBILITY_LIST = "compatibilityList";
  @SerializedName(SERIALIZED_NAME_COMPATIBILITY_LIST)
  private CompatibilityList compatibilityList;


  public SaleProductResponseDto id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public SaleProductResponseDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the product.
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of the product.")

  public String getName() {
    return name;
  }



  public void setName(String name) {
    this.name = name;
  }


  public SaleProductResponseDto category(Category category) {
    
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")

  public Category getCategory() {
    return category;
  }



  public void setCategory(Category category) {
    this.category = category;
  }


  public SaleProductResponseDto eans(List<String> eans) {
    
    this.eans = eans;
    return this;
  }

  public SaleProductResponseDto addEansItem(String eansItem) {
    if (this.eans == null) {
      this.eans = new ArrayList<String>();
    }
    this.eans.add(eansItem);
    return this;
  }

   /**
   * A list of codes that identify this product. Currently this can include EAN, ISBN, and UPC identifier types.
   * @return eans
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "A list of codes that identify this product. Currently this can include EAN, ISBN, and UPC identifier types.")

  public List<String> getEans() {
    return eans;
  }



  public void setEans(List<String> eans) {
    this.eans = eans;
  }


  public SaleProductResponseDto images(List<ImageUrl> images) {
    
    this.images = images;
    return this;
  }

  public SaleProductResponseDto addImagesItem(ImageUrl imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<ImageUrl>();
    }
    this.images.add(imagesItem);
    return this;
  }

   /**
   * Get images
   * @return images
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ImageUrl> getImages() {
    return images;
  }



  public void setImages(List<ImageUrl> images) {
    this.images = images;
  }


  public SaleProductResponseDto parameters(List<ProductParameter> parameters) {
    
    this.parameters = parameters;
    return this;
  }

  public SaleProductResponseDto addParametersItem(ProductParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<ProductParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<ProductParameter> getParameters() {
    return parameters;
  }



  public void setParameters(List<ProductParameter> parameters) {
    this.parameters = parameters;
  }


  public SaleProductResponseDto offerRequirements(OfferRequirements offerRequirements) {
    
    this.offerRequirements = offerRequirements;
    return this;
  }

   /**
   * Get offerRequirements
   * @return offerRequirements
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OfferRequirements getOfferRequirements() {
    return offerRequirements;
  }



  public void setOfferRequirements(OfferRequirements offerRequirements) {
    this.offerRequirements = offerRequirements;
  }


  public SaleProductResponseDto compatibilityList(CompatibilityList compatibilityList) {
    
    this.compatibilityList = compatibilityList;
    return this;
  }

   /**
   * Get compatibilityList
   * @return compatibilityList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CompatibilityList getCompatibilityList() {
    return compatibilityList;
  }



  public void setCompatibilityList(CompatibilityList compatibilityList) {
    this.compatibilityList = compatibilityList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaleProductResponseDto saleProductResponseDto = (SaleProductResponseDto) o;
    return Objects.equals(this.id, saleProductResponseDto.id) &&
        Objects.equals(this.name, saleProductResponseDto.name) &&
        Objects.equals(this.category, saleProductResponseDto.category) &&
        Objects.equals(this.eans, saleProductResponseDto.eans) &&
        Objects.equals(this.images, saleProductResponseDto.images) &&
        Objects.equals(this.parameters, saleProductResponseDto.parameters) &&
        Objects.equals(this.offerRequirements, saleProductResponseDto.offerRequirements) &&
        Objects.equals(this.compatibilityList, saleProductResponseDto.compatibilityList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, category, eans, images, parameters, offerRequirements, compatibilityList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaleProductResponseDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    eans: ").append(toIndentedString(eans)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    offerRequirements: ").append(toIndentedString(offerRequirements)).append("\n");
    sb.append("    compatibilityList: ").append(toIndentedString(compatibilityList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

