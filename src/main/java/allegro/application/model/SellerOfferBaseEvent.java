/*
 * Allegro REST API
 * https://developer.allegro.pl/about
 *
 * The version of the OpenAPI document: latest
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package allegro.application.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

import java.util.Objects;

/**
 * The data of an event.
 */
@ApiModel(description = "The data of an event.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-09-16T16:12:46.567+02:00[Europe/Belgrade]")

public class SellerOfferBaseEvent {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_OCCURRED_AT = "occurredAt";
  @SerializedName(SERIALIZED_NAME_OCCURRED_AT)
  private OffsetDateTime occurredAt;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public SellerOfferBaseEvent() {
    this.type = this.getClass().getSimpleName();
  }

  public SellerOfferBaseEvent id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of the event. It can be used in the &#x60;from&#x60; parameter of the query.
   * @return id
  **/
  @ApiModelProperty(example = "MTEzMjQzODU3NA", required = true, value = "The ID of the event. It can be used in the `from` parameter of the query.")

  public String getId() {
    return id;
  }



  public void setId(String id) {
    this.id = id;
  }


  public SellerOfferBaseEvent occurredAt(OffsetDateTime occurredAt) {
    
    this.occurredAt = occurredAt;
    return this;
  }

   /**
   * The date and time when the event occurred, provided in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
   * @return occurredAt
  **/
  @ApiModelProperty(example = "2019-06-26T15:26:43.891Z", required = true, value = "The date and time when the event occurred, provided in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.")

  public OffsetDateTime getOccurredAt() {
    return occurredAt;
  }



  public void setOccurredAt(OffsetDateTime occurredAt) {
    this.occurredAt = occurredAt;
  }


  public SellerOfferBaseEvent type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * The type of the event.
   * @return type
  **/
  @ApiModelProperty(example = "OFFER_ACTIVATED", required = true, value = "The type of the event.")

  public String getType() {
    return type;
  }



  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SellerOfferBaseEvent sellerOfferBaseEvent = (SellerOfferBaseEvent) o;
    return Objects.equals(this.id, sellerOfferBaseEvent.id) &&
        Objects.equals(this.occurredAt, sellerOfferBaseEvent.occurredAt) &&
        Objects.equals(this.type, sellerOfferBaseEvent.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, occurredAt, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SellerOfferBaseEvent {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    occurredAt: ").append(toIndentedString(occurredAt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

